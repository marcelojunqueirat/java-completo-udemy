//Funcao para truncar os numeros, igual a classe java
function truncar(valor, precisao) {        
      var indice = new Number(0.0);
      var nValor = new Number(valor);
      var nPrecisao = new Number(precisao);
      var resultado;
      
      if (nValor > 0) {
                  nValor = nValor + 0.00000001;
            } else {
                  nValor = nValor - 0.00000001; 
      }
      if(nPrecisao == 1){
            indice = new Number(10);
      } else if(nPrecisao == 2){
            indice = new Number(100);
      }else if(nPrecisao == 3){
            indice = new Number(1000);
      }else if(nPrecisao == 4){
            indice = new Number(10000);
      }else if(nPrecisao == 5){
            indice = new Number(100000);
      }else if(nPrecisao == 6){
            indice = new Number(1000000);
      }
      return parseInt(new Number((nValor * indice))) / indice;
} 


  function stringToNumber(valor){
    var ret = valor;
    while(ret.indexOf('.')>0){
          ret = ret.replace('.','');
    }
    ret = new Number(ret.replace(',','.'));
    return ret;
  }
      
  function numberToString(valor, formato){
    var ret = valor;
    ret = new String(ret).replace('.',',');
    ret = CN_getValorFormatado(formato,ret);
    return ret;
  }
  
  var antesConfirmarGrid = function(idLinha) {
		return true;
  };
  var depoisValidarCamposInvalidos = function(idLinha){
	  
  };
  
  function confirmarGridSubmit(idBotao, idLinha){
	var verfOriginal = BENV_isCamposValidos(jQuery("form")[0]);
	if( !verfOriginal ){
		return false;
		}
	
		if( idLinha == undefined || idLinha == "" ){
		idLinha = 'Row';
	}
	
	var form = jQuery('#' + idLinha + "Form").get(0);
	if (form.style.display == "none") {
		return true;
		} 
		var verf = antesConfirmarGrid(idLinha);
	if( !verf ){
		
		return false;
	}
	
	var inputsText = GF_getInputs(idLinha);
	if( !GF_validaCampos(inputsText) ){
		depoisValidarCamposInvalidos(idLinha);
		return false;
	}
	
	jQuery('#'+idBotao).click();
	
	return true;
  }
	(function() {
	var GF_antesInserirRegistro_anterior = GF_antesInserirRegistro;
		GF_antesInserirRegistro = function(idGrid){
	
	  	var verf = GF_antesInserirRegistro_anterior.apply(this, arguments); 
			  
		if( !verf ){
			return false;
		}
		
		var formulario = document.getElementById(idGrid + "Form");
		jQuery(formulario).hide();
		
		return true;
	};
	})();
	
	
	function valida_cpf(campo) {
		var cpf = campo.val();
		var validacao = false;
		var numeros, digitos, soma, i, resultado, digitos_iguais;
		digitos_iguais = 1;
		if (cpf.length < 11)
			validacao = false;
		for (i = 0; i < cpf.length - 1; i++)
			if (cpf.charAt(i) != cpf.charAt(i + 1)) {
				digitos_iguais = 0;
				break;
			}
		if (!digitos_iguais) {
			numeros = cpf.substring(0, 9);
			digitos = cpf.substring(9);
			soma = 0;
			for (i = 10; i > 1; i--)
				soma += numeros.charAt(10 - i) * i;
			resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
			if (resultado != digitos.charAt(0))
				validacao = false;
			numeros = cpf.substring(0, 10);
			soma = 0;
			for (i = 11; i > 1; i--)
				soma += numeros.charAt(11 - i) * i;
			resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
			if (resultado != digitos.charAt(1)) {
				validacao = false;
			} else {
				validacao = true;
			}
		} else {
			validacao = false;
		}
		if (validacao == false) {
			alert('CPF inválido.');
			campo.val('');
			campo.focus();
		}
		return validacao;

	}

	function valida_cnpj(campo) {
		var cnpj = campo.val();
		var validacao = false;
		var numeros, digitos, soma, i, resultado, pos, tamanho, digitos_iguais;
		digitos_iguais = 1;
		if (cnpj.length < 14 && cnpj.length < 15)
			validacao = false;
		for (i = 0; i < cnpj.length - 1; i++)
			if (cnpj.charAt(i) != cnpj.charAt(i + 1)) {
				digitos_iguais = 0;
				break;
			}
		if (!digitos_iguais) {
			tamanho = cnpj.length - 2;
			numeros = cnpj.substring(0, tamanho);
			digitos = cnpj.substring(tamanho);
			soma = 0;
			pos = tamanho - 7;
			for (i = tamanho; i >= 1; i--) {
				soma += numeros.charAt(tamanho - i) * pos--;
				if (pos < 2)
					pos = 9;
			}
			resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
			if (resultado != digitos.charAt(0))
				validacao = false;
			tamanho = tamanho + 1;
			numeros = cnpj.substring(0, tamanho);
			soma = 0;
			pos = tamanho - 7;
			for (i = tamanho; i >= 1; i--) {
				soma += numeros.charAt(tamanho - i) * pos--;
				if (pos < 2)
					pos = 9;
			}
			resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
			if (resultado != digitos.charAt(1)){
				validacao = false;
			}else{
				validacao = true;
			}
		} else{
			validacao = false;
		}
		if (validacao == false) {
			alert('Campo CNPJ inválido.');
			campo.val('');
			campo.focus();
		}
		return validacao;
	}	

	// #################################################################################################
	// ## DA UM SUBMIT NO FORM VALIDANDO OS CAMPOS
	// #################################################################################################
	function executeAcao(acao) {
		var f = document.forms[0];
		f.action = acao;
		if (f.onsubmit()) {
			f.submit();
		}
	}

	// #################################################################################################
	// ## DA UM SUBMIT NO FORM SEM VALIDACAO
	// #################################################################################################
	function executeAcaoSemValidacao(acao) {
		var f = document.forms[0];
		f.action = acao;
		f.submit();
	}
	
	function validaEmail(email) {
		// http://stackoverflow.com/a/46181/11236
		var re = new RegExp("[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?");
		var result = re.test(email);
		if (result == false) {
			alert('O e-mail informado não é válido');
			return false;
		} else {
			return true;
		}
	}
	
	function calcularDistanciaPistaSimplesDuplaTrechos(idGrid, nuKminicial, nuKmfinal) {
		var ghTrecho = new GridHandler(idGrid);
		var prmSituacaoSREDup = jQuery('#prmSituacaoSREDup').val();
		var prmSituacaoSRESimples = jQuery('#prmSituacaoSRESimples').val();
		var prmSiglaCliente = jQuery('#prmSiglaCliente').val();
		prmSiglaCliente = prmSiglaCliente.replace('-','');
		prmSiglaCliente = prmSiglaCliente.replace('/','');
		var nuDistanciapreTrechos = 0;
		var nuDistanciapredupTrechos = 0;
		var nuDistanciaTotalTrechos = 0;
		
		var length = ghTrecho.size();
		for (var i = 0; i < length; ++i) {
			var status = _gvl(getColumnIdIndexed(idGrid, 'status', i));		
			if (status.indexOf("D") == -1) {
				
				var rowFields = ghTrecho.getRowFields(i, new Array('trecho.situacaotrecho.sgSituacaosre', 'trecho.sgResponsavel'));

				var vlExtensao = subtrairKms(stringToNumber(document.getElementById(getColumnIdIndexed(idGrid,nuKminicial,i)).value), stringToNumber(document.getElementById(getColumnIdIndexed(idGrid,nuKmfinal,i)).value));
				if (_isNullOrBlank(vlExtensao)) {
					vlExtensao = "0";
				}

				var sgResponsavel = rowFields.get('trecho.sgResponsavel').value;
				
				var sgSituacao = rowFields.get('trecho.situacaotrecho.sgSituacaosre').value;
				
				if (prmSiglaCliente == sgResponsavel.trim()){
					if (sgSituacao.trim() == prmSituacaoSREDup) {
						nuDistanciapredupTrechos = nuDistanciapredupTrechos + parseFloat(vlExtensao);
					} else if (comparaSituacaoSimples(sgSituacao.trim(), prmSituacaoSRESimples)==true) {
						nuDistanciapreTrechos = nuDistanciapreTrechos + parseFloat(vlExtensao);				
					}
				}
				nuDistanciaTotalTrechos = nuDistanciaTotalTrechos + parseFloat(vlExtensao);
			}
		}
		
		var distancias = {
			"nuDistanciapreTrechos": nuDistanciapreTrechos+"", 
			"nuDistanciapredupTrechos": nuDistanciapredupTrechos+"",
			"nuDistanciaTotalTrechos": nuDistanciaTotalTrechos+""
		};
		return distancias;
	}
	
	function subtrairKms(kmInicial, kmFinal){
		var total = kmFinal - kmInicial;
		return (truncar(total,3));
	}
	
	function showLoading() {
		BENV_exibeProcessando();
	}

	function hideLoading() {
		BENV_removeProcessando();
	}

	function BENV_exibeProcessando() {
		var objBody = document.getElementsByTagName("BODY")[0];
		var objLayer = document.createElement("DIV");
		objLayer.className = "processando";
		objLayer.id = "divProcessando";

		var alturaPag = F_getBrowserHeight();
		var larguraPag = F_getBrowserWidth();
		var posScroll = document.body.scrollTop;
		var largura = 200;
		var altura = 40;
		
		objLayer.style.left = ((larguraPag - largura) / 2) + "px";
		objLayer.style.top = ((alturaPag - altura) / 2 + posScroll) + "px";	

		objBody.appendChild(objLayer);
	}

	function BENV_removeProcessando() {
		var objBody = document.getElementsByTagName("BODY")[0];
		var divProcessando = document.getElementById("divProcessando");
		objBody.removeChild(divProcessando);
	}
	
	function validaTelefone(campo, isCelular){
		var telefone  = campo.val();
		if(isTelefoneValido(telefone)){
			return true;
		}else{
			alert(isCelular?'Campo celular inválido':'Campo telefone inválido');
			limparCampo(campo);
			campo.focus();
			return false;
		}
	}
	
	function isTelefoneValido(campo){
		var campo = retiraFormatacaoDosCampos(campo);
		if(campo.length == 11 || campo.length == 10){
			return true;
		}else{
			return false;
		}
	}
	 
	function limparCampoTelefone(campo){
		campo = campo==null || campo==undefined ? jQuery("#entity\\.nuTelefone") : campo;
		var telefone  = campo.val();
		telefone = retiraFormatacaoDosCampos(telefone);
		campo.val(telefone);
	}
	 
	 function retiraFormatacaoDosCampos(campo){
			campo = replaceAll(campo,".", "");
			campo = replaceAll(campo,"-", "");
			campo = replaceAll(campo,"/", "");
			campo = replaceAll(campo,",", "");
			campo = replaceAll(campo,"(", "");
			campo = replaceAll(campo,")", "");
			return campo;
	 }
	 
	 function validaPeriodo(dtInicio, dtFim){
		 if((dtInicio.value != null && dtInicio.value != "") && (dtFim.value != null && dtFim.value != "")){
		 	CD_verificaValor(dtInicio);
		 	CD_verificaValor(dtFim);
		 	if(Date.strToDate(dtInicio.value).after(Date.strToDate(dtFim.value))){
				dtFim.value = "";
				alert(msgKey("msg.aviso.data.inicio.maior.fim"));
				dtFim.focus();
			}
		}
	 }
	 
	 function existeDadosGrid(idGrid){
		var gh = new GridHandler(idGrid, document);
		var size = gh.size();
		
		for ( var i = 0; i < size; i++) {
			var status = gh.getFieldData(i, 'status');
			
			if (_isNullOrBlank(status) || status == GridHandler.SPW_STATUS_INSERT || status == GridHandler.SPW_STATUS_UPDATE){
				 return true;
			}
		}
		
		return false;
	}  	
	 
	function formataNuAet(obj) {
		formataSoNumeroEBarra(obj);
		var value = obj.value;
		var separatorSuffix = "/";
		
		if (value == separatorSuffix){
			obj.value = "";
			value = "";
		}
		
		if( !_isNullOrBlank(value)){
			var indexBarra = value.replaceAll("\\", separatorSuffix).indexOf(separatorSuffix);
			
			if( indexBarra > -1 && (indexBarra + 1) < value.length ){
				var valueDepoisBarra = value.substr(indexBarra + 1);
				var valueAntesBarra = value.substr(0, indexBarra);
				var sizeAntesBarra = valueAntesBarra.length;
				
				if( sizeAntesBarra <= 5 ){
					if( !isNaN(valueDepoisBarra) ){
						obj.value = valueAntesBarra + separatorSuffix + formataValueAno(valueDepoisBarra);
					} else {
						obj.value = value.substr(0, indexBarra);
						formataNuAet(obj);
					}
				}
			} else if( value.length <= 6 && indexBarra > -1 ) {
				var suffix = (new Date()).getFullYear();
				
				obj.value = value + suffix;
			} else if( value.length <= 5 && indexBarra == -1) {
				var suffix = separatorSuffix + (new Date()).getFullYear();
				
				obj.value = value + suffix;
			}
		}
	}
	
	function formataSoNumeroEBarra(obj){
		var valor = obj.value;
		var valorNovo = "";
		var tecla;
		for (i = 0; i < valor.length; i++){
			tecla = valor.charCodeAt(i);
			//aceita numeros e barra
			if ((tecla > 47 && tecla < 58) || tecla == 47) {
				valorNovo = valorNovo + valor.charAt(i);			
			}
		}
		obj.value = valorNovo;
	}
